---
title: "Emisiones de Metano"
format: html
editor: visual
---

```{r}
install.packages("pacman")
library(pacman)
p_load("tidyverse", "ggplot2", "dplyr", "readxl")
```

```{r Lectura de datos}
emissions <- read.csv("Methane_Data.csv") 
head(emissions)
```


```{r}
emissions <- emissions[-4] #Se elimina columna con codigo de tipo de emisiones
colnames(emissions) <- c("Country", "ISO", "Series", "X2023X")  #Renombramos columnas
emissions <- emissions[-c(2129,2130,2131,2132,2133), ]#Se eliminan registros vacíos o con metadata

#Para eliminar filas con ".." que viene en lugar de NA
eliminar <- ".."
emissions <- emissions[ -grep(eliminar, emissions[, , drop = TRUE]), ]
```

Todas las emisiones son derivados de la energía usada en los procesos, excepto agricultura y residuos que las emiten directamente. Tienen unidades de Mt CO2e
```{r}
#Transformacion del dataframe para que las categorías sean una columna cada una
emissions <- emissions %>%spread(Series, X2023X)

```

```{r}
#Se renombran las columnas:
colnames(emissions) <- c("Country", "ISO","Agriculture", "Building", "Fugitive_Emissions", "Industrial_Combustion", "Industrial_Processes", "Power_Industry", "Transport", "Waste" ) #Se renombran columnas

#Y se convierten a variable numérica
emissions$Agriculture <- as.numeric(emissions$Agriculture)
emissions$Building <- as.numeric(emissions$Building)
emissions$Fugitive_Emissions <- as.numeric(emissions$Fugitive_Emissions)
emissions$Industrial_Combustion <- as.numeric(emissions$Industrial_Combustion)
emissions$Industrial_Processes <- as.numeric(emissions$Industrial_Processes)
emissions$Power_Industry <- as.numeric(emissions$Power_Industry)
emissions$Transport <- as.numeric(emissions$Transport)
emissions$Waste <- as.numeric(emissions$Waste)

```
Se ha producido un error porque no todos los ".." fueron eliminados. Ahora son NA se pueden eliminar con una instrucción más simple, se realiza después del siguiente proceso para no repetir la instrucción



A continuación se leerá otra base de datos con la clasificación de las naciones segun el banco mundial. Esta es en base a su region, nivel de ingreso o tipo de prestamo que el Banco mundial puede otorgar
```{r}
paises <- read_xlsx("CLASS.xlsx") 
paises <- paises[-5] # Se elimina columna de prestamo 
colnames(paises)[1] <- "Country" # Se cambia nombre de la columna para que coincida en ambas bases de datos
emissions <- emissions %>% inner_join(paises, by= "Country", keep=F ) #Se unen las bases de datos

#Dado que varios países son reconocidos por el banco munndial pero no se encuentran en la base de datos de las emisiones, tienen la mayoría de columnas vacías

metano<- na.omit(emissions) # Nueva base de datos completa y limpia.
```

```{r}
metano$Region <-as.factor(metano$Region) # Se configura la región como un factor (variable categórica)
```

A continuación se crea una tabla con las sumas de todas las emisiones por región. Se vuelven a configurar los nombres devido a que se modifican durante la creación de la tabla
```{r}
x_region <- metano %>% group_by(metano$Region) %>% 
  summarise(sum(Agriculture), sum(Building), sum(Fugitive_Emissions), sum(Industrial_Combustion), sum(Industrial_Processes), sum(Power_Industry), sum(Transport), sum(Waste))
  
x_region <- as.data.frame(x_region)
colnames(x_region) <- c("Region","Agriculture", "Building", "Fugitive_Emissions", "Industrial_Combustion", "Industrial_Processes", "Power_Industry", "Transport", "Waste" )

```

## Visualización con  igraph

```{r}
p_load("igraph", "ggraph","tidygraph","RColorBrewer")

# Las variables se incluyen en una sola fila. 
nodos <- gather(x_region, key = "sector", value = "Emisiones", -Region ) 

#Se crea un objeto o "grafo"
red <- graph_from_data_frame(nodos, directed=T)

E(red)$width <- seq(ecount(red)) #tamaño de la flecha
E(red)$size <- seq(ecount(red)) #longitud 

#ponderadación. Se buscan cambios en el tamaño de los nodos pero no se logra
E(red)$weight <- seq(ecount(red))
strength(red, mode="in")

plot(red, edge.arrow.size=.4, weighted = T, edge.color=origen.color) #visualización
```


```{r}

```






